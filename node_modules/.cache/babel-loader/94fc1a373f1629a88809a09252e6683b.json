{"remainingRequest":"/Users/olgakhomenko/Desktop/start-vue 2/node_modules/babel-loader/lib/index.js!/Users/olgakhomenko/Desktop/start-vue 2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/olgakhomenko/Desktop/start-vue 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/olgakhomenko/Desktop/start-vue 2/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/olgakhomenko/Desktop/start-vue 2/src/views/Login.vue","mtime":1637246598520},{"path":"/Users/olgakhomenko/Desktop/start-vue 2/babel.config.js","mtime":1636036003521},{"path":"/Users/olgakhomenko/Desktop/start-vue 2/node_modules/cache-loader/dist/cjs.js","mtime":1636035998032},{"path":"/Users/olgakhomenko/Desktop/start-vue 2/node_modules/babel-loader/lib/index.js","mtime":1636035998318},{"path":"/Users/olgakhomenko/Desktop/start-vue 2/node_modules/cache-loader/dist/cjs.js","mtime":1636035998032},{"path":"/Users/olgakhomenko/Desktop/start-vue 2/node_modules/vue-loader/lib/index.js","mtime":1636035998412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5naHQgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmVtZTogJ2xvZ2luJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW1haWw6ICcnLAogICAgICBwYXNzd29yZDogJycKICAgIH07CiAgfSwKICB2YWxpZGF0aW9uczogewogICAgZW1haWw6IHsKICAgICAgZW1haWw6IGVtYWlsLAogICAgICByZXF1aXJlZDogcmVxdWlyZWQKICAgIH0sCiAgICBwYXNzd29yZDogewogICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgIG1pbkxlbmdodDogbWluTGVuZ2h0KDYpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXRIYW5kbGVyOiBmdW5jdGlvbiBzdWJtaXRIYW5kbGVyKCkgewogICAgICBpZiAodGhpcy4kdi4kaW52YWxpZCkgewogICAgICAgIHRoaXMuJHYuJHRvdWNoKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnLycpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,KAAA,EAAA,QAAA,EAAA,SAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAAA,GAFA;AAMA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,KAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,QAAA;AAAA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA;AAFA,GANA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,KAAA,EAAA,CAAA,QAAA,EAAA;AACA,aAAA,EAAA,CAAA,MAAA;AACA;AACA;;AAGA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AATA;AAVA,CAAA","sourcesContent":["<template>\n    <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Домашняя бухгалтерия</span>\n            <div class=\"input-field\">\n            <input\n                id=\"email\"\n                type=\"text\"\n                v-model.trim=\"email\"\n                :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n            >\n            <label for=\"email\">Email</label>\n            <small class=\"helper-text invalid\">Email</small>\n            </div>\n            <div class=\"input-field\">\n            <input\n                id=\"password\"\n                type=\"password\"\n                class=\"validate\">\n            <label for=\"password\">Пароль</label>\n            <small class=\"helper-text invalid\">Password</small>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <div>\n                <button class=\"btn waves-effect waves-light auth-submit\" type=\"submit\">\n                    Войти <i class=\"material-icons right\">send</i>\n                </button>\n            </div>\n\n            <p class=\"center\">\n                Нет аккаунта?\n                <router-link to='/register'>Зарегистрироваться</router-link>\n            </p>\n        </div>\n    </form>\n</template>\n\n<script>\nimport {email, required, minLenght} from 'vuelidate/lib/validators'\n\nexport default {\n    neme: 'login',\n    data: () =>  ({\n        email: '',\n        password:''\n    }),\n    validations:{\n        email:{email, required},\n        password:{required, minLenght: minLenght(6)}\n    },\n    methods: {\n        submitHandler() {\n            if (this.$v.$invalid) {\n                this.$v.$touch()\n                return\n            }\n\n\n            this.$router.push('/')\n        }\n    }\n}\n</script>"],"sourceRoot":"src/views"}]}