{"remainingRequest":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/olgakhomenko/Documents/GitHub/start-vue/src/components/app/navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/src/components/app/navbar.vue","mtime":1637228453939},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/cache-loader/dist/cjs.js","mtime":1637687716917},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/babel-loader/lib/index.js","mtime":1636035998318},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/cache-loader/dist/cjs.js","mtime":1637687716917},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/vue-loader/lib/index.js","mtime":1636035998412}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data: () => ({\n        date: new Date(),\n        interval: null,\n        dropdown: null,\n    }),\n    methods: {\n        logout (){\n            console.log('Logout')\n            this.$router.push('/login?message=logout')\n        }\n    },\n    mounted(){\n        this.interval = setInterval(() => {\n            this.date = new Date()\n        }, 1000)\n        this.Dropdown = M.Dropdown.init(this.$refs.dropdown, {\n            constrainWidth: false\n        })\n    },\n    beforeDestroy(){\n        clearInterval(this.interval)\n        if (this.Dropdown && this.Dropdown.destroy) {\n            this.Dropdown.destroy()\n        }\n        }\n}\n",{"version":3,"sources":["navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"navbar.vue","sourceRoot":"src/components/app","sourcesContent":["<template>\n      <nav class=\"navbar orange lighten-1\">\n        <div class=\"nav-wrapper\">\n            <div class=\"navbar-left\">\n                <a href=\"#\" @click.prevent=\"$emit('click')\">\n                    <i class=\"material-icons black-text\">dehaze</i>\n                </a>\n                <span class=\"black-text\">{{date | date('datetime')}}</span>\n            </div>\n\n            <ul class=\"right hide-on-small-and-down\">\n                <li>\n                    <a class=\"dropdown-trigger black-text\" href=\"#\"\n                        data-target=\"dropdown\"\n                        ref=\"dropdown\">\n                    USER NAME\n                    <i class=\"material-icons right\">arrow_drop_down</i>\n                    </a>\n\n                    <ul id='dropdown' class='dropdown-content'>\n                    <li>\n                        <router-link to=\"/profile\" class=\"black-text\">\n                        <i class=\"material-icons\">account_circle</i>Профиль\n                        </router-link>\n                    </li>\n                    <li class=\"divider\" tabindex=\"-1\"></li>\n                    <li>\n                        <a href=\"#\" class=\"black-text\" @click.prevent=\"logout\">\n                        <i class=\"material-icons\">assignment_return</i>Выйти\n                        </a>\n                    </li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n      </nav>\n</template>\n\n<script>\nexport default {\n    data: () => ({\n        date: new Date(),\n        interval: null,\n        dropdown: null,\n    }),\n    methods: {\n        logout (){\n            console.log('Logout')\n            this.$router.push('/login?message=logout')\n        }\n    },\n    mounted(){\n        this.interval = setInterval(() => {\n            this.date = new Date()\n        }, 1000)\n        this.Dropdown = M.Dropdown.init(this.$refs.dropdown, {\n            constrainWidth: false\n        })\n    },\n    beforeDestroy(){\n        clearInterval(this.interval)\n        if (this.Dropdown && this.Dropdown.destroy) {\n            this.Dropdown.destroy()\n        }\n        }\n}\n</script>"]}]}