{"remainingRequest":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/olgakhomenko/Documents/GitHub/start-vue/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/src/views/Login.vue","mtime":1637690818741},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/cache-loader/dist/cjs.js","mtime":1637687716917},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/babel-loader/lib/index.js","mtime":1636035998318},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/cache-loader/dist/cjs.js","mtime":1637687716917},{"path":"/Users/olgakhomenko/Documents/GitHub/start-vue/node_modules/vue-loader/lib/index.js","mtime":1636035998412}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {email, required, minLength} from 'vuelidate/lib/validators'\nimport messages from '@/utils/messages'\n\nexport default {\n  name: 'login',\n  data: () => ({\n    email: '',\n    password: ''\n  }),\n  validations: {\n    email: {email, required},\n    password: {required, minLength: minLength(6)}\n  },\n  mounted() {\n    if (messages[this.$route.query.message]) {\n      this.$message(messages[this.$route.query.message])\n    }\n  },\n  methods: {\n    submitHandler() {\n      if (this.$v.$invalid) {\n        this.$v.$touch()\n        return\n      }\n      const formData = {\n        email: this.email,\n        password: this.password\n      }\n\n      console.log(formData)\n      this.$router.push('/')\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n    <div class=\"card-content\">\n      <span class=\"card-title\">Домашняя бухгалтерия</span>\n      <div class=\"input-field\">\n        <input\n            id=\"email\"\n            type=\"text\"\n            v-model.trim=\"email\"\n            :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n        >\n        <label for=\"email\">Email</label>\n        <small \n          class=\"helper-text invalid\"\n          v-if=\"$v.email.$dirty && !$v.email.required\"\n        >Поле Email не должно быть пустым</small>\n        <small \n          class=\"helper-text invalid\"\n          v-else-if=\"$v.email.$dirty && !$v.email.email\"\n        >Введите корретный Email</small>\n      </div>\n      <div class=\"input-field\">\n        <input\n            id=\"password\"\n            type=\"password\"\n            v-model.trim=\"password\"\n            :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\">\n        <label for=\"password\">Пароль</label>\n        <small \n          class=\"helper-text invalid\"\n          v-if=\"$v.password.$dirty && !$v.password.required\" >\n          Введите пароль\n        </small>\n        <small \n          class=\"helper-text invalid\"\n          v-else-if=\"$v.password.$dirty && !$v.password.minLength\" >\n          Пароль должен быть {{$v.password.$params.minLength.min}} символов. Сейчас он {{password.length}}\n        </small>\n      </div>\n    </div>\n\n    <div class=\"card-action\">\n      <div>\n        <button\n            class=\"btn waves-effect waves-light auth-submit\"\n            type=\"submit\">\n          Войти\n          <i class=\"material-icons right\">send</i>\n        </button>\n      </div>\n\n      <p class=\"center\">\n        Нет аккаунта?\n        <router-link to=\"register\">Зарегистрироваться</router-link>\n      </p>\n    </div>\n  </form>\n</template>\n\n<script>\n  import {email, required, minLength} from 'vuelidate/lib/validators'\n  import messages from '@/utils/messages'\n\n  export default {\n    name: 'login',\n    data: () => ({\n      email: '',\n      password: ''\n    }),\n    validations: {\n      email: {email, required},\n      password: {required, minLength: minLength(6)}\n    },\n    mounted() {\n      if (messages[this.$route.query.message]) {\n        this.$message(messages[this.$route.query.message])\n      }\n    },\n    methods: {\n      submitHandler() {\n        if (this.$v.$invalid) {\n          this.$v.$touch()\n          return\n        }\n        const formData = {\n          email: this.email,\n          password: this.password\n        }\n\n        console.log(formData)\n        this.$router.push('/')\n      }\n    }\n  }\n</script>\n"]}]}